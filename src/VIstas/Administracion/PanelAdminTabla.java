/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIstas.Administracion;

import entidades.TipoHabitacion;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import AccesoADatos.HabitacionData;
import AccesoADatos.HuespedData;
import AccesoADatos.ReservaData;
import VIstas.AdministracionView;
import entidades.Habitacion;
import entidades.Huesped;
import entidades.Reserva;
import java.awt.Color;
import java.awt.Component;
import java.time.Instant;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;


/**
 *
 * @author Rodri
 */
public class PanelAdminTabla extends javax.swing.JPanel {

   private DefaultTableModel modelo=new DefaultTableModel(){
        public boolean isCellEditable(int f, int c){
            return false;//ninguna celda es editable
        } 
    };
    private Date fechaActual= Date.from(AdministracionView.FECHA.atStartOfDay(ZoneId.systemDefault()).toInstant());
    private HabitacionData habitacionData= new HabitacionData();
    private List<LocalDate> fechas=new ArrayList<>();
    
    private HuespedData huespedData=new HuespedData();
    private ReservaData reservaData=new ReservaData(huespedData, habitacionData);
    
    public PanelAdminTabla() {
        initComponents();
        this.setVisible(false);
        armarCabecera();
        cargarComboPisos();
        cargarComboBoxTipoHabitacion();
        llenarTablaPorPiso();
        TablaHabitaciones.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TablaHabitaciones.setAutoCreateRowSorter(true);
        TablaHabitaciones.getTableHeader().setReorderingAllowed(false);
        TablaHabitaciones.setShowGrid(true);
        TablaHabitaciones.setGridColor(Color.BLACK);
        CuadroOcupada.setBackground(Color.GREEN);
        CuadroReservada.setBackground(Color.yellow);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ComboPisos = new javax.swing.JComboBox<>();
        ComboTipoHabitaciones = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaHabitaciones = new javax.swing.JTable();
        CuadroReservada = new javax.swing.JButton();
        CuadroOcupada = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        DetNumeroHabitacion = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        DetNombre = new javax.swing.JTextField();
        DetDni = new javax.swing.JTextField();
        DetTelefono = new javax.swing.JTextField();
        DetDomicilio = new javax.swing.JTextField();
        DetIdHuesped = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        DetCorreo = new javax.swing.JTextField();
        DetImporte = new javax.swing.JTextField();

        setBackground(new java.awt.Color(27, 118, 134));
        setPreferredSize(new java.awt.Dimension(1007, 573));

        jPanel5.setBackground(new java.awt.Color(27, 118, 134));
        jPanel5.setPreferredSize(new java.awt.Dimension(1007, 573));

        jPanel1.setBackground(new java.awt.Color(27, 118, 134));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "HABITACIONES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("TIPO HABITACION");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("PISO");

        ComboPisos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboPisosActionPerformed(evt);
            }
        });

        ComboTipoHabitaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboTipoHabitacionesActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        TablaHabitaciones.setBackground(new java.awt.Color(153, 204, 255));
        TablaHabitaciones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TablaHabitaciones.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        TablaHabitaciones.setForeground(new java.awt.Color(102, 102, 102));
        TablaHabitaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaHabitaciones.setGridColor(new java.awt.Color(0, 0, 0));
        TablaHabitaciones.setRowHeight(20);
        TablaHabitaciones.setSelectionForeground(new java.awt.Color(204, 204, 255));
        TablaHabitaciones.getTableHeader().setReorderingAllowed(false);
        TablaHabitaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaHabitacionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaHabitaciones);

        CuadroOcupada.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Reservada");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setText("Ocupada");

        DetNumeroHabitacion.setEditable(false);
        DetNumeroHabitacion.setBackground(new java.awt.Color(102, 255, 255));
        DetNumeroHabitacion.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        DetNumeroHabitacion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DetNumeroHabitacion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        jLabel10.setText("Hab.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboPisos, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComboTipoHabitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DetNumeroHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addGap(12, 12, 12)
                        .addComponent(CuadroOcupada, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CuadroReservada, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CuadroReservada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CuadroOcupada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ComboPisos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(ComboTipoHabitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DetNumeroHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10))
                            .addGap(0, 2, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(27, 118, 134));
        jPanel3.setPreferredSize(new java.awt.Dimension(956, 177));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("E-MAIL:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setText("ID HUESPED:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setText("TELEFONO:");

        jLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel.setText("DOMICILIO:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("DNI:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel15.setText("HUESPED:");

        DetNombre.setEditable(false);
        DetNombre.setBackground(new java.awt.Color(27, 118, 134));
        DetNombre.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        DetDni.setEditable(false);
        DetDni.setBackground(new java.awt.Color(27, 118, 134));
        DetDni.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        DetTelefono.setEditable(false);
        DetTelefono.setBackground(new java.awt.Color(27, 118, 134));
        DetTelefono.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        DetDomicilio.setEditable(false);
        DetDomicilio.setBackground(new java.awt.Color(27, 118, 134));
        DetDomicilio.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        DetIdHuesped.setEditable(false);
        DetIdHuesped.setBackground(new java.awt.Color(27, 118, 134));
        DetIdHuesped.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("IMPORTE:");

        DetCorreo.setEditable(false);
        DetCorreo.setBackground(new java.awt.Color(27, 118, 134));
        DetCorreo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        DetImporte.setEditable(false);
        DetImporte.setBackground(new java.awt.Color(27, 118, 134));
        DetImporte.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel)
                    .addComponent(jLabel15)
                    .addComponent(jLabel5))
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(DetDomicilio, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                    .addComponent(DetNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                    .addComponent(DetCorreo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(DetIdHuesped, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DetDni, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DetTelefono)
                    .addComponent(DetImporte))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(DetNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(DetIdHuesped, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(DetDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel)
                    .addComponent(DetDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(DetTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DetCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(DetImporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 977, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ComboPisosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboPisosActionPerformed
        llenarTablaPorPiso();
    }//GEN-LAST:event_ComboPisosActionPerformed

    private void ComboTipoHabitacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboTipoHabitacionesActionPerformed
        llenarTablaPorTipoHabitacion();
    }//GEN-LAST:event_ComboTipoHabitacionesActionPerformed

    private void TablaHabitacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaHabitacionesMouseClicked
        mostrarDetalles();
        Integer valor = (Integer) modelo.getValueAt(TablaHabitaciones.getSelectedRow(), 0);
        DetNumeroHabitacion.setText(valor.toString());
        
    }//GEN-LAST:event_TablaHabitacionesMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Integer> ComboPisos;
    private javax.swing.JComboBox<TipoHabitacion> ComboTipoHabitaciones;
    private javax.swing.JButton CuadroOcupada;
    private javax.swing.JButton CuadroReservada;
    private javax.swing.JTextField DetCorreo;
    private javax.swing.JTextField DetDni;
    private javax.swing.JTextField DetDomicilio;
    private javax.swing.JTextField DetIdHuesped;
    private javax.swing.JTextField DetImporte;
    private javax.swing.JTextField DetNombre;
    private javax.swing.JTextField DetNumeroHabitacion;
    private javax.swing.JTextField DetTelefono;
    private javax.swing.JTable TablaHabitaciones;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera() {
        
       ArrayList<LocalDate> fechas = new ArrayList<>();
        modelo.addColumn("HAB");
        LocalDate fechaInicio= Instant.ofEpochMilli(fechaActual.getTime()).atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate fechaFin=fechaInicio.plusDays(120);
        
        while (!fechaInicio.isAfter(fechaFin)) {
            fechas.add(fechaInicio);
            fechaInicio = fechaInicio.plusDays(1);
        }
       
        DateTimeFormatter formatoFecha = DateTimeFormatter.ofPattern("dd/MM");

        for (LocalDate fecha : fechas) {
            String nombreColumna = fecha.format(formatoFecha);
            modelo.addColumn(nombreColumna);
        }
            
        TablaHabitaciones.setModel(modelo);
        for (int column = 1; column < TablaHabitaciones.getColumnCount(); column++) {
            TablaHabitaciones.getColumnModel().getColumn(column).setCellRenderer(new CustomCellRenderer());//Colorea las celdas con un criterio según lo que contiene
        }
        
    }
   

    private void cargarComboPisos() {
        ComboPisos.addItem(1);
        ComboPisos.addItem(2);
        ComboPisos.addItem(3);
        ComboPisos.addItem(4);
        ComboPisos.addItem(5);
        ComboPisos.addItem(6);
        ComboPisos.addItem(7);
        ComboPisos.addItem(8);
    }
     
    public void cargarComboBoxTipoHabitacion() {
        ComboTipoHabitaciones.addItem(TipoHabitacion.ESTANDAR_SIMPLE);
        ComboTipoHabitaciones.addItem(TipoHabitacion.ESTANDAR_SIMPLE_QUEEN);
        ComboTipoHabitaciones.addItem(TipoHabitacion.ESTANDAR_DOBLE_MAT);
        ComboTipoHabitaciones.addItem(TipoHabitacion.ESTANDAR_DOBLE_TWIN);
        ComboTipoHabitaciones.addItem(TipoHabitacion.ESTANDAR_TRIPLE_MAT);
        ComboTipoHabitaciones.addItem(TipoHabitacion.ESTANDAR_TRIPLE_TWIN);
        ComboTipoHabitaciones.addItem(TipoHabitacion.SUITE_DE_LUJO);
    }
     
    private void llenarTablaPorPiso(){
        modelo.setRowCount(0);
        List<Integer> habitaciones = habitacionData.listarIDhabitacionesHabilitadasPorPiso((int)ComboPisos.getSelectedItem());
        LocalDate fechaInicio= Instant.ofEpochMilli(fechaActual.getTime()).atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate fechaFin=fechaInicio.plusDays(120);
        List<LocalDate> fechas = reservaData.obtenerFechas(fechaInicio, fechaFin);
 
        
        int columnas=TablaHabitaciones.getColumnCount();
 
        
        for(Integer idHabitacion : habitaciones) {
            Object[] fila= new Object[columnas+3];
            fila[0]=idHabitacion; 
            int indice = 1;
            for (LocalDate fecha : fechas){
               try{
                    Reserva reserva=reservaData.buscarReservasPorIDHabitacionYfecha(fecha, idHabitacion);
                    int idReserva=reserva.getIdReserva();
                    if(idReserva==0){
                        fila[indice] =null;
                    }else{
                        fila[indice]=idReserva;
                    }
               }catch(NullPointerException ex){
                    
               }
               indice++;
            }
            modelo.addRow(fila);

            }
    }
       
    private void llenarTablaPorTipoHabitacion(){
        modelo.setRowCount(0);
        List<Habitacion> habitaciones = habitacionData.listarHabitacionesPorTipo((TipoHabitacion) ComboTipoHabitaciones.getSelectedItem());
        LocalDate fechaInicio= Instant.ofEpochMilli(fechaActual.getTime()).atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate fechaFin=fechaInicio.plusDays(120);
        List<LocalDate> fechas = reservaData.obtenerFechas(fechaInicio, fechaFin);
 
        
        int columnas=TablaHabitaciones.getColumnCount();
 
        
        for(Habitacion hab : habitaciones) {
            Object[] fila= new Object[columnas+3];
            fila[0]=hab.getIdHabitacion(); 
            int indice = 1;
            for (LocalDate fecha : fechas){
               try{
                    Reserva reserva=reservaData.buscarReservasPorIDHabitacionYfecha(fecha, hab.getIdHabitacion());
                    int idReserva=reserva.getIdReserva();
                    if(idReserva==0){
                        fila[indice] =null;
                    }else{
                        fila[indice]=idReserva;
                    }
               }catch(NullPointerException ex){
                    
               }
               indice++;
            }
            modelo.addRow(fila);

            }
    }
        
    
    private void mostrarDetalles(){
        limpiarDetalles();
        try{
            Integer valorCelda=((int)TablaHabitaciones.getValueAt(TablaHabitaciones.getSelectedRow(), TablaHabitaciones.getSelectedColumn()));
            if(TablaHabitaciones.getSelectedColumn()!=0){
            Reserva reserva=reservaData.buscarReservaId(valorCelda);
            Huesped huesped = huespedData.buscarHuespedId(reserva.getHuesped().getIdHuesped());
            DetNombre.setText(huesped.getNombre());
            DetDni.setText(String.valueOf(huesped.getDni()));
            DetDomicilio.setText(huesped.getDomicilio());
            DetTelefono.setText(huesped.getCelular());
            DetCorreo.setText(huesped.getCorreo());
            DetIdHuesped.setText(String.valueOf(reserva.getHuesped().getIdHuesped()));
            DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            DetImporte.setText(String.valueOf(reserva.getImporte()));
            }
        }catch(NullPointerException ex){}

    }
    
    private void limpiarDetalles(){
        DetNombre.setText("");
        DetDni.setText("");
        DetDomicilio.setText("");
        DetTelefono.setText("");
        DetCorreo.setText("");
        DetIdHuesped.setText("");
        DetImporte.setText("");
        DetNumeroHabitacion.setText("");
    }
    //Colorea las celdas con un criterio según lo que contiene
    class CustomCellRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

        try {
            if (value == null) {
                component.setBackground(table.getBackground());
            } else {
                int valor = (int) value;
                
                int idReserva= valor;
                Reserva reserva=reservaData.buscarReservaId(idReserva);
                Huesped huesped = huespedData.buscarHuespedId(reserva.getHuesped().getIdHuesped());
                Boolean alojado=huesped.isAlojado();
                if (alojado) {
                    component.setBackground(Color.GREEN);
                } else {
                    component.setBackground(Color.YELLOW);
                }
            }
        } catch (NullPointerException ex) {
        }

            return component;
        }
    }
        
}
